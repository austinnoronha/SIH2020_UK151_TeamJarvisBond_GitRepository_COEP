//final code 
#include <Keypad.h>
#include<LiquidCrystal.h>
#include<EEPROM.h>
LiquidCrystal lcd(9,8,7,6,5,4);
char driver1[10];
char driver2[10];
char password1[4];
char password2[4];
char entered_psswd[4];
char Key;
const byte ROWS = 4; //four rows
const byte COLS = 4; //four columns
char hexaKeys[ROWS][COLS] = {
{'1','2','3','A'},
{'4','5','6','B'},
{'7','8','9','C'},
{'*','0','#','D'}
};
byte rowPins[ROWS] = {A0,A1,A2,A3}; 
byte colPins[COLS] = {A4,A5,3,2};   

Keypad customKeypad = Keypad( makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);

void setup()
{ Serial.begin(9600);
  lcd.begin(16,2);
  intialvalues();
  lcd.print("welcome rider");
  lcd.setCursor(0,1);
 
}  
  
void loop()
{ 
  lcd.print("press # for add user");
  delay(500);
  Key = customKeypad.getKey();
  while(Key==NO_KEY)
    Key = customKeypad.getKey();
  if(Key == '#'||driver1[0] == 0)
  { 
    add_user();
  }
   
  lcd.clear();
  lcd.print("select driver");
  lcd.setCursor(0,1);
  lcd.print("print 1 or 2.....");
  delay(100);
  lcd.clear();
  show_driver();
    Key = customKeypad.getKey();
   while(Key==NO_KEY)
     Key = customKeypad.getKey(); 
       if(Key == '1')
       { 
         lcd.clear();
         pass_verify(1);
       }
       else
       if(Key == '2')
       {
         lcd.clear();
         pass_verify(2);
       }
       else
       { 
         lcd.clear();
         lcd.print("you have pressed invalid key");
         delay(100);
         //show_driver();
        } 
}


int add_user()
{ int i;
  lcd.clear();
  lcd.print("enter driving no");
  lcd.setCursor(0,1);
  if(driver1[0]==0)
   { 
     i=0;
     while(i<10)
     {      
       Key = customKeypad.getKey();
       if(Key)
       { 
         driver1[i]=Key;
         lcd.print(driver1[i]);
         EEPROM.write(i,Key);
         i++;
       }
     }
      delay(200);
      pass_enter(1);
    }
  else
   if(driver2[0]==0)
    { 
      int i=10,j=0;
      while(i<20)
      {  
       Key = customKeypad.getKey();
       if(Key)
       { 
         driver2[j]=Key;
         lcd.print(driver2[j]);
         EEPROM.write(i,Key);
         i++;j++;
       }
      }
    delay(200);
      pass_enter(2);
    }
  else
   {
     lcd.clear();
     lcd.print("user limit full");
     lcd.setCursor(0,1);
     lcd.print("delete user ?(d)");
      Key = customKeypad.getKey();
      while(Key == NO_KEY)
       Key = customKeypad.getKey();
       if(Key == 'D')
       { 
         show_driver();
         Key = customKeypad.getKey();
         while(Key == NO_KEY)
          Key = customKeypad.getKey();
         if(Key == '1')
         {
           driver1[0] = 0;
           add_user();
         }
         else
         if(Key == '2')
         {
           driver2[0] = 0;
            add_user();
         }
       }  
      else
      {
        if(Key)
        return(0) ;
      }
    }  
}      
void pass_enter(int k)
{ 
  lcd.clear();
  lcd.print("enter psswd");
  lcd.setCursor(0,1);
  if(k == 1)
    { 
      int i=20,j=0;
      while(i<24)
      {  
        Key = customKeypad.getKey();
        if(Key)
        { 
          password1[j]=Key;
          lcd.print(password1[i]);
          EEPROM.write(i,Key);
          i++;j++;
        }
       
      }
     delay(200);
    }  
  if(k == 2)
  { 
    int i=30,j=0;
    while(i<34)
    {  
      Key = customKeypad.getKey();
        if(Key)
          { 
            password2[j]=Key;
            lcd.print(password2[i]);
            EEPROM.write(i,Key);
            i++;j++;
          }
    }
    delay(200);
  }   
}
               
int pass_verify(int k)
{  
  int j=0;
  lcd.clear();
  lcd.print("enter passkey");
  lcd.setCursor(0,1);
  while(j<4)
  {
    Key = customKeypad.getKey();
    if(Key)
    {entered_psswd[j] = Key;
     lcd.print(entered_psswd[j]);
     j++;
    }
  }
  lcd.clear();
  if( k == 1)
   { if(!(strncmp(entered_psswd,password1,4)))
     { Serial.println(password1);
       lcd.print("bike is started");
       lcd.setCursor(0,1);
       lcd.print("press c to stop the bike");
       stop_bike();            
     }
     else
     { 
       lcd.clear();
       lcd.print("wrong psswd");
       lcd.setCursor(0,1);
       return(0); 
      }   
    }
  if( k == 2)   
   { if(!(strncmp(entered_psswd,password2,4)))
     {
       lcd.print("bike is started");
       lcd.setCursor(0,1);
       lcd.print("press c to stop the bike");
       stop_bike();            
     }
    else
     { 
       lcd.clear();
       lcd.print("wrong psswd");
       lcd.setCursor(0,1);
       return(0); 
     }        
   }    
}

     
void stop_bike()
{
   Key = customKeypad.getKey();
  while(Key==NO_KEY)
    Key = customKeypad.getKey();
  if(Key == 'c')
    { 
      lcd.clear();
      lcd.print("bike is stopped");
      delay(2000);
    }
}  
   
void show_driver()
{  lcd.clear();
    lcd.print("1) ");
   for(int i=0;i<10;i++)
    { 
     lcd.print(driver1[i]);
    }
    lcd.setCursor(0,1);
    lcd.print("2) ");
    if(driver2[0]!=0)  
     {
      for(int i=0;i<10;i++)
      { 
        lcd.print(driver2[i]);
      } 
     }
     else
        lcd.print("not exist");
    delay(500);
 }    
void intialvalues()
{
  for(int i=0;i<10;i++)
  {
    driver1[i] = EEPROM.read(i);
  }
  for(int i=10,j=0;i<20;i++,j++)
  { 
    driver2[j] = EEPROM.read(i); 
  }
  for(int i=20,j=0;i<24;i++,j++)
  { 
    password1[j] = EEPROM.read(i);
  }
  for(int i=30,j=0;i<34;i++,j++)
  {  
    password2[j] = EEPROM.read(i); 
  }  
}
