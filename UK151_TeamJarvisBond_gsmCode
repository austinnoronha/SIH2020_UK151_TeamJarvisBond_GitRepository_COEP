//final code 
#include <SoftwareSerial.h>
#include <Keypad.h>
#include<LiquidCrystal.h>
#include<EEPROM.h>

//SoftwareSerial mySerial(0, 1); //gsm 
//SoftwareSerial ss(RXPin, TXPin); // gps
//static const int RXPin =10 , TXPin = 11 ;
//static const uint32_t GPSBaud = 4800;
//float lat = 28.5458,lon = 77.1703;
LiquidCrystal lcd(9,8,7,6,5,4);
char driver1[10];
char driver2[10];
char password1[4];
char password2[4];
char entered_psswd[4];
char Key;
int pass_check1=0;
int pass_check2=0;
const byte ROWS = 4; //four rows
const byte COLS = 4; //four columns
char hexaKeys[ROWS][COLS] = {
{'1','2','3','A'},
{'4','5','6','B'},
{'7','8','9','C'},
{'*','0','#','D'}
};
byte rowPins[ROWS] = {A0,A1,A2,A3}; 
byte colPins[COLS] = {A4,A5,3,2};   

Keypad customKeypad = Keypad( makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);
int pass_verify(int k,int old=1)
{  
  int j=0;
  lcd.clear();
  lcd.print("current passkey");
  lcd.setCursor(0,1);
  while(j<4)
  {
    Key = customKeypad.getKey();
    if(Key)
    {entered_psswd[j] = Key;
     lcd.print(entered_psswd[j]);
     j++;
    }
  }
  delay(100);
  lcd.clear();
  if(old!=1)
  {
    if( k == 1)
     { 
      if(!(strncmp(entered_psswd,password1,4)))
        { //Serial.println(password1);
          driver1[0] = 0;
           add_user();
           return(0);
        }
      else
       { 
           lcd.clear();
           lcd.print("wrong psswd");
           lcd.setCursor(0,1);
           return(0);
       }  
     }
    if( k == 2)   
     { 
      if(!(strncmp(entered_psswd,password2,4)))
       {
           driver2[0] = 0;
           add_user();
           return(0);
       }
       else
       {         
        lcd.print("wrong psswd");
        lcd.setCursor(0,1);
        return(0);
       } 
     }
  } 
  if( k == 1)
   { if(!(strncmp(entered_psswd,password1,4)))
     { //Serial.println(password1);
       lcd.print("bike is started");
       lcd.setCursor(0,1);
       lcd.print("press c to stop the bike");
       stop_bike();            
     }
     else
     { 
       if(pass_check1<5)
       {
        lcd.clear();
        lcd.print("wrong psswd");
        lcd.setCursor(0,1);
        pass_check1++;
        delay(100);
        return(0);
       }
       else
       {
        for(int i=0;i<10;i++)
         driver1[i]= '^';
        lcd.clear();
        lcd.print("account blocked");
        delay(20);
        return(0);
       }
      }   
    }
  if( k == 2)   
   { if(!(strncmp(entered_psswd,password2,4)))
     {
       lcd.print("bike is started");
       lcd.setCursor(0,1);
       lcd.print("press c to stop the bike");
       stop_bike();            
     }
    else
     { if(pass_check2<5)
       {
         lcd.clear();
         lcd.print("wrong psswd");
          lcd.setCursor(0,1);
          pass_check2++;
          return(0);
       }
       else
       {
        for(int i=0;i<10;i++)
         driver2[i]= '^';
        lcd.clear();
        lcd.print("account has blocked");
        delay(20);
        return(0);
       } 
     }        
   }    
}
void setup()
{ Serial.begin(9600);
  //ss.begin(GPSBaud);
  lcd.begin(16,2);
  intialvalues();
  lcd.print("welcome rider");
  lcd.setCursor(0,1);
  lcd.print("press # for add user");
  delay(500);
   
}  
  
void loop()
{ 
  // sendlocation();
  delay(500);
 Key = customKeypad.getKey();
  while(Key==NO_KEY)
    Key = customKeypad.getKey();
  if(Key == '#'||driver1[0] == 0)
  { 
    add_user();
  }
  lcd.clear();
  lcd.print("select driver");
  lcd.setCursor(0,1);
  lcd.print("print 1 or 2.....");
  delay(100);
  lcd.clear();
  show_driver();
    Key = customKeypad.getKey();
   while(Key==NO_KEY)
     Key = customKeypad.getKey(); 
       if(Key == '1'&&driver1[4]!='^')
       { 
         lcd.clear();
         pass_verify(1,1);
       }
       else
       if(Key == '2'&&driver2[4]!='^')
       {
         lcd.clear();
         pass_verify(2,1);
       }
       else
       if(Key== '1' ||Key== '2')
       { 
         recover_account(0);
        }
        else
        {
          lcd.clear();
         lcd.print("invalid key");
         delay(100);
         //show_driver();
         
        } 
}



void recover_account(int a)
{  int code[4];char en_code[4];
  
   //when gsm module get connected then it send this genrated  code to the mobile no
 //uncomment send messege function when gsm module get connected
  if(a==0)
   {
     for(int i=0;i<4;i++)
     {code[i] =random(1, 9);
      Serial.print(code[i]);
     }
    Serial.print("\n");
    //SendMessage(&code);
   }
  if(a<3)
   {  a++;int flag=0;
      int j=0;
      lcd.clear();
      lcd.print("enter otp");
      lcd.setCursor(0,1);
      while(j<4)
       {
        Key = customKeypad.getKey();
        if(Key)
          { 
           en_code[j] = Key;
          lcd.print(en_code[j]);
            int value = en_code[j]-'0';
            //Serial.print(value);
            //Serial.print(code[j]);
            if(value == code[j])
            {
              flag++;
              //Serial.println("matching");
            }
           j++;
          }
       }
       delay(100);
      if(flag==4)//!(strncmp(code,en_code,4)))
        { 
          lcd.clear();
          intialvalues();
          pass_check1=0;
          pass_check2=0;
          lcd.print("successfully ");
          lcd.setCursor(0,1);
          lcd.print("recovered");
          delay(100);
        }
      else
       {
          lcd.print("wrong code");
          lcd.setCursor(0,1);
          lcd.print("attempt left ");
          lcd.print(2-a);
          delay(200);
          recover_account(a);
       }
   }       
  else
  {
    lcd.clear();
    lcd.print("otp expired");
    delay(100); 
  }
}


int add_user()
{ int i;
  lcd.clear();
  lcd.print("enter driving no");
  lcd.setCursor(0,1);
  if(driver1[0]==0)
   { 
     i=0;
     while(i<10)
     {      
       Key = customKeypad.getKey();
       if(Key)
       { 
         driver1[i]=Key;
         lcd.print(driver1[i]);
         EEPROM.write(i,Key);
         i++;
       }
     }
      delay(200);
      pass_enter(1);
    }
  else
   if(driver2[0]==0)
    { 
      int i=10,j=0;
      while(i<20)
      {  
       Key = customKeypad.getKey();
       if(Key)
       { 
         driver2[j]=Key;
         lcd.print(driver2[j]);
         EEPROM.write(i,Key);
         i++;j++;
       }
      }
    delay(200);
      pass_enter(2);
    }
  else
   {
     lcd.clear();
     lcd.print("user limit full");
     lcd.setCursor(0,1);
     lcd.print("delete user ?(d)");
      Key = customKeypad.getKey();
      while(Key == NO_KEY)
       Key = customKeypad.getKey();
       if(Key == 'D')
       { 
         show_driver();
         Key = customKeypad.getKey();
         while(Key == NO_KEY)
          Key = customKeypad.getKey();
         if(Key == '1')
         { pass_verify(1,0);
         }
         else
         if(Key == '2')
         {  pass_verify(2,0);
           driver2[0] = 0;
            add_user();
         }
       }  
      else
      {
        if(Key)
        return(0) ;
      }
    }  
}      
void pass_enter(int k)
{ 
  lcd.clear();
  lcd.print("enter psswd");
  lcd.setCursor(0,1);
  if(k == 1)
    { 
      int i=20,j=0;
      while(i<24)
      {  
        Key = customKeypad.getKey();
        if(Key)
        { 
          password1[j]=Key;
          lcd.print(password1[i]);
          EEPROM.write(i,Key);
          i++;j++;
        }
       
      }
     delay(200);
    }  
  if(k == 2)
  { 
    int i=30,j=0;
    while(i<34)
    {  
      Key = customKeypad.getKey();
        if(Key)
          { 
            password2[j]=Key;
            lcd.print(password2[i]);
            EEPROM.write(i,Key);
            i++;j++;
          }
    }
    delay(200);
  }   
}
               
void stop_bike()
{
   Key = customKeypad.getKey();
  while(Key==NO_KEY)
    Key = customKeypad.getKey();
  if(Key == 'c')
    { 
      lcd.clear();
      lcd.print("bike is stopped");
      delay(2000);
    }
}  
   
void show_driver()
{  lcd.clear();
    lcd.print("1) ");
    if(driver1[4]!= '^')
    {
      for(int i=0;i<10;i++)
       { 
        lcd.print(driver1[i]);
       }
    }
    else
    {
      lcd.print("blocked account");
    }
    lcd.setCursor(0,1);
    lcd.print("2) ");
    if(driver2[4]!= '^')
    {
      if(driver2[0]!=0)  
       {
        for(int i=0;i<10;i++)
        { 
         lcd.print(driver2[i]);
        } 
       }
      else
        lcd.print("not exist");
     }
     else
    {
      lcd.print("blocked account");
    }   
    delay(500);
 }    
void intialvalues()
{
  for(int i=0;i<10;i++)
  {
    driver1[i] = EEPROM.read(i);
  }
  for(int i=10,j=0;i<20;i++,j++)
  { 
    driver2[j] = EEPROM.read(i); 
  }
  for(int i=20,j=0;i<24;i++,j++)
  { 
    password1[j] = EEPROM.read(i);
  }
  for(int i=30,j=0;i<34;i++,j++)
  {  
    password2[j] = EEPROM.read(i); 
  }  
}

 


 /*void SendMessage(char * code)
{
  mySerial.println("AT+CMGF=1");    
  mySerial.println("AT+CMGS=\"+91mobileno\"\r"); 
  mySerial.println(code);
  mySerial.println((char)26);
}*/
 /* void sendlocation()
 {
     while(gpsSerial.available()){ // check for gps data 
     if(ss.encode(gpsSerial.read()))// encode gps data 
     {  
       ss.f_get_position(&lat,&lon);
     }
     mySerial.println("AT+CMGF=1");    
     mySerial.println("AT+CMGS=\"+91mobileno\"\r"); 
     mySerial.println(code);
     mySerial.println((char)26);
 }*/
